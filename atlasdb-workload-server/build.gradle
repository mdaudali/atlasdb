apply from: "../gradle/shared.gradle"
apply plugin: 'com.palantir.metric-schema'

license {
    exclude '**/DurableWritesMetrics.java'
}

dependencies {
    implementation project(':atlasdb-workload-server-api')
    implementation project(':atlasdb-api')
    implementation project(':atlasdb-buggify')
    implementation project(':atlasdb-client')
    implementation project(':atlasdb-client-protobufs')
    implementation project(':atlasdb-config')
    implementation project(':atlasdb-impl-shared')
    implementation project(':atlasdb-cassandra')
    implementation project(':timestamp-api')
    implementation project(':lock-api')
    implementation project(':lock-api-objects')

    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.google.guava:guava'
    implementation 'com.palantir.conjure.java.api:service-config'
    implementation 'com.palantir.refreshable:refreshable'
    implementation 'com.palantir.safe-logging:preconditions'
    implementation 'com.palantir.safe-logging:safe-logging'
    implementation 'com.palantir.tritium:tritium-registry'
    implementation 'io.dropwizard.metrics:metrics-core'
    implementation 'io.vavr:vavr'
    implementation 'one.util:streamex'
    api group: 'com.palantir.cassandra', name: 'palantir-cassandra-jmx-api'
    implementation('com.datastax.cassandra:cassandra-driver-core') {
        exclude(group: 'com.codahale.metrics', module: 'metrics-core')
    }
    api 'com.palantir.cassandra:cassandra-manager-core', {
        // cassandra-manager-core depends on cassandra-all
        // cassandra-all depends on high-scale-lib (https://github.com/boundary/high-scale-lib)
        // this library has a few replacements for classes in java.util (under that same package) which makes eclipse sad when
        // compiling against java11; it should be safe to exclude given its usage in cassandra and lack thereof in manager
        exclude group: 'com.boundary', module: 'high-scale-lib'
    }

    testImplementation project(':commons-executors')
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    testImplementation 'com.palantir.safe-logging:preconditions-assertj'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation('org.jmock:jmock') {
        exclude group: 'org.hamcrest'
    }

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
}
